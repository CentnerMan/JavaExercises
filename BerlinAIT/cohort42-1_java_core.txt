Java Basic группа cohort42.1:

Программа:		https://docs.google.com/spreadsheets/d/1-F8A71NYdhI8I0wY79DZAJ0KI5GUxGcj7MOHQjh6nn8/
Материалы:		https://drive.google.com/drive/u/0/folders/1ZhAAKG0SVP13F--0NU88_vjxnh-ot2_d
Расписание:		апрель https://primetimetable.com/publish/?id=d95ab9aa-2f8f-44a4-81b4-39638106e439&time=6&skin=3#id=d95ab9aa-2f8f-44a4-81b4-39638106e439&view=1&classId=fde7511f-2c55-4d06-956d-1dfb1f436d36
				май https://primetimetable.com/publish/?id=fdc96359-54bc-4797-8704-699db041c969&time=6&skin=3#id=fdc96359-54bc-4797-8704-699db041c969&view=1&classId=8cff655b-f2de-443b-946b-4549f9c08764
Посещаемость:	https://docs.google.com/spreadsheets/d/18WtyeFcdp6IKOEHH-d-mbFP0C7RwFFuW/edit#gid=557951074
Отзывы:			https://docs.google.com/spreadsheets/d/e/2PACX-1vTD5BzAJJGpXRsLbfBSM_ptCmXzYOmA7Y9HCeK65lfoXoDSHwMKnu5V6R42Qjt4pfh13En8DOBSfONG/pubhtml

1. Введение. Установка JDK, IDEA, git, архитектура компьютера, языки программирования
2. Технологии выполнения кода. Компиляция, интерпретация, работа в IDEA, Github Desktop
3. Переменные и типы данных
   - представление информации в компьютере
   - переменные, типизация, типы переменных в Java
   - int, double, char
   - объявление, присваивание, вывод, литералы
   - aрифметические операции
   - явное и неявное преобразования
4. Класс String, консольный ввод-вывод
   - понятие ввода/вывода
   - класс Scanner, импорт, пакеты
   - класс String
   - конкатенация строк
   - классы StringBuffer и StringBuilder
5. Тип boolean, оператор if
   - тип boolean
   - логические высказывания
   - операторы сравнения
   - логические операции
   - таблицы истинности
   - cинтаксис и блок-схема оператора
   - конструкции if-else, if-else-if-else
   - тернарный оператор
   - области видимости
6. Оператор switch, цикл while
   - синтаксис и блок-схемa switch
   - операторы case, default
   - применение: калькулятор на switch
   - синтаксис и блок-схема цикла
   - цикл while и do-while
   - применение: рассчитать погашение кредита
7. Пишем игру "Угадай число"
   - логика игры
   - какие классы нужны
   - необходимые переменные
   - цикл для повтора попыток
   - ограничение числа попыток
   - цикл для повтора игры
8. Массивы, цикл for
   - индексы и значения массива (чтение и запись)
   - явная инициализация массива
   - указатели и адреса, cтруктура массива в памяти
   - переменные массива, значение null
   - синтаксис оператора for, операторы break и continue
9. Методы, часть 1 & 2
   - выделение повторяющихся блоков кода в метод
   - сигнатура метода
   - void-метод
   - передача аргументов в формальные параметры 
   - varargs, переменное число аргументов
   - методы с возвращаемыми значениями
   - перегрузка методов
10. Повторение пройденного
    - java компилятор и виртуальная машина
    - переменные, примитивные типы
    - логические выражения
    - операторы if и if-else, тернарный оператор
    - оператор switch
    - циклы while и do-while
    - цикл for со счётчиком и без
    - массивы
    - методы
11. Пишем игру "Крестики-нолики"
    - обсуждаем алгоритм игры
    - объявляем необходимые переменные
    - создаем главный цикл игры с заголовками методов
    - создаём методы
    - тестируем игру
12. Структуры и алгоритмы. Сортировка и поиск
    https://www.cs.usfca.edu/~galles/visualization/Algorithms.html
    https://visualgo.net/en
    - введение в структуры данных
    - переменная и массив, стек и очередь
    - алгоритм линейного поиска
    - алгоритмы сортировки (exchangeSort & selectionSort)
    - алгоритм бинарного поиска
13. Алгоритмы и О-нотация
    https://proglib.io/p/big-o-notaciya-chto-eto-takoe-i-pochemu-ee-obyazatelno-nuzhno-znat-kazhdomu-programmistu-2022-02-17
    https://habr.com/ru/articles/444594/
    https://www.mathway.com/ru/Graph
    - оценка алгоритма по времени выполнения
    - оценка по количеству операций
    - оценка по порядку количества операций
    - О-нотация
14. Основы git
    - понятие системы контроля версий
    - удаленный и локальный репозиторий
    - операции clone, add, commit, push, pull, rollback
    - работа с Git через среду разработки
15. Введение в ООП, часть 1
    - определение класса как абстрактного типа данных
    - разница между классом и объектом
    - абстракция как первый принцип ООП
    - классы как ссылочный тип
    - конструкторы, конструктор по умолчанию
    - перегрузка конструкторов
    - массивы объектов
    - методы
16. Введение в ООП, часть 2
17. Инкапсуляция
    - инкапсуляция как принцип ООП
    - инкапсуляция как объединение структуры данных и методов
    - инкапсуляция как защита внутренней структуры
    - модификаторы доступа и их отсутствие
    - методы доступа, геттеры и сеттеры
18. Статические члены классы, модификатор final
    - модификатор static
    - cтатические поля, методы, инициализаторы
    - модификатор final у полей и переменных
19. Список на основе массива
    - списки, их отличие от массива
    - создание класса, реализующего int список
    - добавление элемента
    - удаление элемента
    - вывод списка
    - `расширение` списка при недостатке элементов
20. Повторение пройденного
    - алгоритмы и структуры
    - оценка сложности алгоритмов, Big-O
    - основы работы с Git
    - введение в классы и объекты
    - ООП, инкапсуляция
    - модификаторы static и final
21. Модульное тестирование JUnit
    - введение в тестирование, виды тестирования
    - Apache Maven, создание mvn-проекта
    - подключение JUnit в Maven
    - аннотация @Test
    - покрытие
22. Наследование
    - наследование как принцип ООП
    - ключевое слово extends
    - использование наследования для исключения дублирования
    - работа с конструкторами предка
    - ключевое слово super
    - переопределение методов
23. Object и отношения между классами
    - класс Object и его методы
    - сравнение объектов, метод equals()
    - особенности переопределения equals()
    - отношения между классами
      - ассоциация
      - агрегирование
      - композиция
24. Введение в SQL базы данных
    - SQL базы данных
    - программа SQLiteStudio
    - язык SQL запросов
    - JDBC (Java Database Connectivity)
    - выполнение SQL запросов из Java кода
25. Полиморфизм
    - полиморфизм как принцип ООП
    - восходящее преобразование
    - переопределение методов
26. Абстрактные классы
    - aбстрактные классы, методы
    - иерархии наследования с использованием абстрактных классов
27. Интерфейсы
    - интерфейсы, как требование к поведению реализуемых классов
    - множественная имплементация интерфейсов
    - default-методы
28. Вложенные и внутренние классы
    - преимущества использования
    - доступность членов внешних и внутренних классов
    - создание экземпляров
29. Список на основе узлов
    https://linked-list-visualizer.vercel.app/app
    https://vonvista.github.io/Linked-List/
    - отличие массива от связного списка
    - создание внутреннего класса-узла
    - добавление элемента
    - удаление элемента
    - вывод списка
30. Повторение пройденного
    - модульное тестирование
    - введение в SQL базы данных
    - инкапсуляция
    - наследование
    - полиморфизм
31. Анонимные классы и лямбда выражения
    - введение в Swing
    - рисование с использованием paint()
    - компоновщики элементов и панели
    - создание и размещение кнопок
    - обработка нажатия на кнопку
    - пример анонимного класса
    - введение в лямбда-выражения
32. Enums, Generics и Wrapper Classes
    - синтаксис Enum и примеры использования
    - примеры использования Generics
    - стирание типов
    - обобщенные методы
    - оберточные типы
33. JCF #1: Java Collection (#36,#37,#38,#39)
    - Collection, Iterable, Iterator (#37)
    - List, LinkedList, ArrayList
    - Хеширование
    - Самостоятельная реализация HashMap (опционально)
    - класс Collections
34. JCF #2: Comparator, Comparable (#36)
35. JCF #3: Set, HashSet, LinkedHashSet, TreeSet (#38)
36. JCF #4: Map, HashMap, LinkedHashMap, TreeMap (#39)
37. Работа с ветками в git (#31)
    - необходимость ветвления
    - Fork
    - Pull request
    - создание веток, переключение между ними, удаление
    - разрешение конфликтов
38. Проектная работа день #1
    - консольное интерактивное приложение, используем стандартные коллекции
    - работа в командах без публичной защиты
39. Проектная работа день #2
40. Проектная работа день #3
41. Архитектура приложений
    - многослойная архитектура
    - выделение сервисов, репозиториев, моделей
42. Введение в Stream API
43. Применение Stream API
    - интерфейс Stream
    - специализированные функциональные интерфейсы
    - промежуточные и терминальные методы
    - обработка данных с помощью Stream API
44. Исключения (Exceptions)
    - ключевые слова для работы с исключениями
    - создание собственных классов исключений
    - лучшие практики по обработке исключений
    - try-with-resources
45. Java IO
    - InputStream, OutputStream
    - Reader, Writer, BufferedReader, BufferedWriter
    - LocalDate, LocalDateTime, DateFormatter
46. Проектная работа #1
    - консольное приложение с трехслойной архитектурой
    - обеспечить покрытие тестами
    - хранение информации в текстовых файлах (или SQL)
    - работа в командах с возможной публичной защитой
47. Проектная работа #2
48. Проектная работа #3
49. Проектная работа #4
50. Проектная работа #5

Занятия:
	январь:		16,17,19,22,23,26,29,31
	февраль:	2,5,7,9,12,14,16,19,21,23,26,28
	март:		1,4,6,7,11,13,15,18,20,22,25,27
	апрель:		3,5,8,10,12,15,17,19,22
	май:		
	итого:		41

Консультации:
	январь:		25
	февраль:	1,8,15,22,29
	март:		14,21,28
	апрель:		4,11,18
	май:		
	итого:		12

Осталось занятий:
	апрель:		24,26,29
	май:		3,6,8,10,13,15
	осталось:	9

Осталось консультаций:
	апрель:		25
	май:		2,7,16
	осталось:	4

Студенты:

1. Andrey Hein				https://github.com/AndreyHein
2. Andrey Shishkov			https://github.com/AndreyShishkov2103
3. Poryvaieva Halyna		https://github.com/HalynaPoryvaieva
4. Larysa Petrova			https://github.com/larysa7408
5. Rodion Shilinski			https://github.com/Zannifeks
6. Valerian Kipke			https://github.com/Varaan785
7. Yaroslav Boiko			https://github.com/ilofrudd
8. Mukhlis Hasanov			https://github.com/MukhlisHasanov
9. Alexander Germanow		https://github.com/AlexanderGermanow
10. Gorbovyi Anton			https://github.com/AGorbovyi
11. Alex Postica			https://github.com/AlexPostica
12. Ilja Blind?				https://github.com/IljaBlind

Инфиксные и постфиксные выражения:

Инфиксные, префиксные и постфиксные выражения
http://aliev.me/runestone/BasicDS/InfixPrefixandPostfixExpressions.html

Преобразование инфиксной нотации в постфиксную
https://habr.com/ru/articles/489744/

Convert Infix to Postfix Expressions in Java
https://www.baeldung.com/java-convert-infix-to-postfix-expressions

maven artefact
https://mvnrepository.com/artifact/org.scijava/parsington/1.0.1

Варианты проектных работ:

1. Система складского учёта:
   классы: Product, ProductAndCount, Manager, Warehouse, {ToWarehouse, Order, FromWarehouse} <- BaseDocument

2. Библиотечная система. Классы:
   - Book              - книги в библиотеке
   - User              - пользователь
   - Library           - библиотека с книгами
   - UserList          - книги, которые взял пользователь
   - FromLibrary       - взять книги из библиотеке почитать
   - ToLibrary         - вернуть книгу в библиотеку
   - AddToLibrary      - добавить книги в библиотеку
   - RemoveFromLibrary - удалить книгу из библиотеки

3. Система зарплата и кадры. Классы:
   - сотрудник
   - предприятие где работают сотрудники
   - приказ о приёме на работу
   - приказ об увольнении
   - табель отработанного времени
   - ведомость выплаты зарплаты

4. Автосервис. Классы:
   - мастера
   - клиенты-автомобиль
   - прейскурант на работы
   - заказ-наряд по клиенту
   - материалы-запчасти

5. Пиццерия. Классы:
   - ингредиенты
   - основания
   - пицца в сборе
   - пиццерия
   - заказчики
   - заказ
   - отчёт по реализации
